// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cli.proto

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CliCmd_Cmd int32

const (
	CliCmd_OPEN  CliCmd_Cmd = 0
	CliCmd_CLOSE CliCmd_Cmd = 1
)

var CliCmd_Cmd_name = map[int32]string{
	0: "OPEN",
	1: "CLOSE",
}
var CliCmd_Cmd_value = map[string]int32{
	"OPEN":  0,
	"CLOSE": 1,
}

func (x CliCmd_Cmd) String() string {
	return proto.EnumName(CliCmd_Cmd_name, int32(x))
}
func (CliCmd_Cmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cli_8e66adfc44877512, []int{0, 0}
}

// cmd 4
type CliCmd struct {
	Cmd                  CliCmd_Cmd `protobuf:"varint,1,opt,name=cmd,proto3,enum=model.CliCmd_Cmd" json:"cmd,omitempty"`
	Session              string     `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	RequestId            string     `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Pid                  uint32     `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CliCmd) Reset()         { *m = CliCmd{} }
func (m *CliCmd) String() string { return proto.CompactTextString(m) }
func (*CliCmd) ProtoMessage()    {}
func (*CliCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_cli_8e66adfc44877512, []int{0}
}
func (m *CliCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CliCmd.Unmarshal(m, b)
}
func (m *CliCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CliCmd.Marshal(b, m, deterministic)
}
func (dst *CliCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CliCmd.Merge(dst, src)
}
func (m *CliCmd) XXX_Size() int {
	return xxx_messageInfo_CliCmd.Size(m)
}
func (m *CliCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_CliCmd.DiscardUnknown(m)
}

var xxx_messageInfo_CliCmd proto.InternalMessageInfo

func (m *CliCmd) GetCmd() CliCmd_Cmd {
	if m != nil {
		return m.Cmd
	}
	return CliCmd_OPEN
}

func (m *CliCmd) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *CliCmd) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *CliCmd) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func init() {
	proto.RegisterType((*CliCmd)(nil), "model.CliCmd")
	proto.RegisterEnum("model.CliCmd_Cmd", CliCmd_Cmd_name, CliCmd_Cmd_value)
}

func init() { proto.RegisterFile("cli.proto", fileDescriptor_cli_8e66adfc44877512) }

var fileDescriptor_cli_8e66adfc44877512 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0xce, 0xc9, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcd, 0xcd, 0x4f, 0x49, 0xcd, 0x51, 0x9a, 0xc2, 0xc8,
	0xc5, 0xe6, 0x9c, 0x93, 0xe9, 0x9c, 0x9b, 0x22, 0xa4, 0xcc, 0xc5, 0x9c, 0x9c, 0x9b, 0x22, 0xc1,
	0xa8, 0xc0, 0xa8, 0xc1, 0x67, 0x24, 0xa8, 0x07, 0x96, 0xd7, 0x83, 0xc8, 0xe9, 0x39, 0xe7, 0xa6,
	0x04, 0x81, 0x64, 0x85, 0x24, 0xb8, 0xd8, 0x8b, 0x53, 0x8b, 0x8b, 0x33, 0xf3, 0xf3, 0x24, 0x98,
	0x14, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x21, 0x59, 0x2e, 0xae, 0xa2, 0xd4, 0xc2, 0xd2, 0xd4,
	0xe2, 0x92, 0xf8, 0xcc, 0x14, 0x09, 0x66, 0xb0, 0x24, 0x27, 0x54, 0xc4, 0x33, 0x45, 0x48, 0x80,
	0x8b, 0xb9, 0x20, 0x33, 0x45, 0x82, 0x45, 0x81, 0x51, 0x83, 0x37, 0x08, 0xc4, 0x54, 0x92, 0xe2,
	0x62, 0x06, 0x59, 0xcb, 0xc1, 0xc5, 0xe2, 0x1f, 0xe0, 0xea, 0x27, 0xc0, 0x20, 0xc4, 0xc9, 0xc5,
	0xea, 0xec, 0xe3, 0x1f, 0xec, 0x2a, 0xc0, 0x98, 0xc4, 0x06, 0x76, 0xa4, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0xdf, 0xd0, 0xac, 0x56, 0xb1, 0x00, 0x00, 0x00,
}
