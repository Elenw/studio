// Code generated by protoc-gen-go. DO NOT EDIT.
// source: performance.proto

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// cmd 1
type PerformanceMonitor struct {
	Timestamp            uint64                           `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Mem                  *PerformanceMonitor_Memory       `protobuf:"bytes,1,opt,name=mem,proto3" json:"mem,omitempty"`
	Cpu                  *PerformanceMonitor_Cpu          `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Load                 *PerformanceMonitor_Load         `protobuf:"bytes,4,opt,name=load,proto3" json:"load,omitempty"`
	Uptime               float64                          `protobuf:"fixed64,5,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Cpulist              []*PerformanceMonitor_Cpu        `protobuf:"bytes,6,rep,name=cpulist,proto3" json:"cpulist,omitempty"`
	FileSystemList       []*PerformanceMonitor_FileSystem `protobuf:"bytes,7,rep,name=file_system_list,json=fileSystemList,proto3" json:"file_system_list,omitempty"`
	ProcessList          []*PerformanceMonitor_Process    `protobuf:"bytes,8,rep,name=process_list,json=processList,proto3" json:"process_list,omitempty"`
	Nets                 []*PerformanceMonitor_NetWork    `protobuf:"bytes,9,rep,name=nets,proto3" json:"nets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *PerformanceMonitor) Reset()         { *m = PerformanceMonitor{} }
func (m *PerformanceMonitor) String() string { return proto.CompactTextString(m) }
func (*PerformanceMonitor) ProtoMessage()    {}
func (*PerformanceMonitor) Descriptor() ([]byte, []int) {
	return fileDescriptor_performance_844bf52ae59b90ea, []int{0}
}
func (m *PerformanceMonitor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceMonitor.Unmarshal(m, b)
}
func (m *PerformanceMonitor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceMonitor.Marshal(b, m, deterministic)
}
func (dst *PerformanceMonitor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceMonitor.Merge(dst, src)
}
func (m *PerformanceMonitor) XXX_Size() int {
	return xxx_messageInfo_PerformanceMonitor.Size(m)
}
func (m *PerformanceMonitor) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceMonitor.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceMonitor proto.InternalMessageInfo

func (m *PerformanceMonitor) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PerformanceMonitor) GetMem() *PerformanceMonitor_Memory {
	if m != nil {
		return m.Mem
	}
	return nil
}

func (m *PerformanceMonitor) GetCpu() *PerformanceMonitor_Cpu {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *PerformanceMonitor) GetLoad() *PerformanceMonitor_Load {
	if m != nil {
		return m.Load
	}
	return nil
}

func (m *PerformanceMonitor) GetUptime() float64 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *PerformanceMonitor) GetCpulist() []*PerformanceMonitor_Cpu {
	if m != nil {
		return m.Cpulist
	}
	return nil
}

func (m *PerformanceMonitor) GetFileSystemList() []*PerformanceMonitor_FileSystem {
	if m != nil {
		return m.FileSystemList
	}
	return nil
}

func (m *PerformanceMonitor) GetProcessList() []*PerformanceMonitor_Process {
	if m != nil {
		return m.ProcessList
	}
	return nil
}

func (m *PerformanceMonitor) GetNets() []*PerformanceMonitor_NetWork {
	if m != nil {
		return m.Nets
	}
	return nil
}

type PerformanceMonitor_Memory struct {
	TotalMem             uint64   `protobuf:"varint,1,opt,name=total_mem,json=totalMem,proto3" json:"total_mem,omitempty"`
	UsedMem              uint64   `protobuf:"varint,2,opt,name=used_mem,json=usedMem,proto3" json:"used_mem,omitempty"`
	FreeMem              uint64   `protobuf:"varint,3,opt,name=free_mem,json=freeMem,proto3" json:"free_mem,omitempty"`
	ActualUsed           uint64   `protobuf:"varint,4,opt,name=actual_used,json=actualUsed,proto3" json:"actual_used,omitempty"`
	ActualFree           uint64   `protobuf:"varint,5,opt,name=actual_free,json=actualFree,proto3" json:"actual_free,omitempty"`
	UsedSwap             uint64   `protobuf:"varint,6,opt,name=used_swap,json=usedSwap,proto3" json:"used_swap,omitempty"`
	FreeSwap             uint64   `protobuf:"varint,7,opt,name=free_swap,json=freeSwap,proto3" json:"free_swap,omitempty"`
	TotalSwap            uint64   `protobuf:"varint,8,opt,name=total_swap,json=totalSwap,proto3" json:"total_swap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformanceMonitor_Memory) Reset()         { *m = PerformanceMonitor_Memory{} }
func (m *PerformanceMonitor_Memory) String() string { return proto.CompactTextString(m) }
func (*PerformanceMonitor_Memory) ProtoMessage()    {}
func (*PerformanceMonitor_Memory) Descriptor() ([]byte, []int) {
	return fileDescriptor_performance_844bf52ae59b90ea, []int{0, 0}
}
func (m *PerformanceMonitor_Memory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceMonitor_Memory.Unmarshal(m, b)
}
func (m *PerformanceMonitor_Memory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceMonitor_Memory.Marshal(b, m, deterministic)
}
func (dst *PerformanceMonitor_Memory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceMonitor_Memory.Merge(dst, src)
}
func (m *PerformanceMonitor_Memory) XXX_Size() int {
	return xxx_messageInfo_PerformanceMonitor_Memory.Size(m)
}
func (m *PerformanceMonitor_Memory) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceMonitor_Memory.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceMonitor_Memory proto.InternalMessageInfo

func (m *PerformanceMonitor_Memory) GetTotalMem() uint64 {
	if m != nil {
		return m.TotalMem
	}
	return 0
}

func (m *PerformanceMonitor_Memory) GetUsedMem() uint64 {
	if m != nil {
		return m.UsedMem
	}
	return 0
}

func (m *PerformanceMonitor_Memory) GetFreeMem() uint64 {
	if m != nil {
		return m.FreeMem
	}
	return 0
}

func (m *PerformanceMonitor_Memory) GetActualUsed() uint64 {
	if m != nil {
		return m.ActualUsed
	}
	return 0
}

func (m *PerformanceMonitor_Memory) GetActualFree() uint64 {
	if m != nil {
		return m.ActualFree
	}
	return 0
}

func (m *PerformanceMonitor_Memory) GetUsedSwap() uint64 {
	if m != nil {
		return m.UsedSwap
	}
	return 0
}

func (m *PerformanceMonitor_Memory) GetFreeSwap() uint64 {
	if m != nil {
		return m.FreeSwap
	}
	return 0
}

func (m *PerformanceMonitor_Memory) GetTotalSwap() uint64 {
	if m != nil {
		return m.TotalSwap
	}
	return 0
}

type PerformanceMonitor_Cpu struct {
	User                 uint64   `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Nice                 uint64   `protobuf:"varint,2,opt,name=nice,proto3" json:"nice,omitempty"`
	Sys                  uint64   `protobuf:"varint,3,opt,name=sys,proto3" json:"sys,omitempty"`
	Idle                 uint64   `protobuf:"varint,4,opt,name=idle,proto3" json:"idle,omitempty"`
	Wait                 uint64   `protobuf:"varint,5,opt,name=wait,proto3" json:"wait,omitempty"`
	Irq                  uint64   `protobuf:"varint,6,opt,name=irq,proto3" json:"irq,omitempty"`
	SoftIrq              uint64   `protobuf:"varint,7,opt,name=soft_irq,json=softIrq,proto3" json:"soft_irq,omitempty"`
	Stolen               uint64   `protobuf:"varint,8,opt,name=stolen,proto3" json:"stolen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformanceMonitor_Cpu) Reset()         { *m = PerformanceMonitor_Cpu{} }
func (m *PerformanceMonitor_Cpu) String() string { return proto.CompactTextString(m) }
func (*PerformanceMonitor_Cpu) ProtoMessage()    {}
func (*PerformanceMonitor_Cpu) Descriptor() ([]byte, []int) {
	return fileDescriptor_performance_844bf52ae59b90ea, []int{0, 1}
}
func (m *PerformanceMonitor_Cpu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceMonitor_Cpu.Unmarshal(m, b)
}
func (m *PerformanceMonitor_Cpu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceMonitor_Cpu.Marshal(b, m, deterministic)
}
func (dst *PerformanceMonitor_Cpu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceMonitor_Cpu.Merge(dst, src)
}
func (m *PerformanceMonitor_Cpu) XXX_Size() int {
	return xxx_messageInfo_PerformanceMonitor_Cpu.Size(m)
}
func (m *PerformanceMonitor_Cpu) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceMonitor_Cpu.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceMonitor_Cpu proto.InternalMessageInfo

func (m *PerformanceMonitor_Cpu) GetUser() uint64 {
	if m != nil {
		return m.User
	}
	return 0
}

func (m *PerformanceMonitor_Cpu) GetNice() uint64 {
	if m != nil {
		return m.Nice
	}
	return 0
}

func (m *PerformanceMonitor_Cpu) GetSys() uint64 {
	if m != nil {
		return m.Sys
	}
	return 0
}

func (m *PerformanceMonitor_Cpu) GetIdle() uint64 {
	if m != nil {
		return m.Idle
	}
	return 0
}

func (m *PerformanceMonitor_Cpu) GetWait() uint64 {
	if m != nil {
		return m.Wait
	}
	return 0
}

func (m *PerformanceMonitor_Cpu) GetIrq() uint64 {
	if m != nil {
		return m.Irq
	}
	return 0
}

func (m *PerformanceMonitor_Cpu) GetSoftIrq() uint64 {
	if m != nil {
		return m.SoftIrq
	}
	return 0
}

func (m *PerformanceMonitor_Cpu) GetStolen() uint64 {
	if m != nil {
		return m.Stolen
	}
	return 0
}

type PerformanceMonitor_Load struct {
	One                  float64  `protobuf:"fixed64,1,opt,name=one,proto3" json:"one,omitempty"`
	Five                 float64  `protobuf:"fixed64,2,opt,name=five,proto3" json:"five,omitempty"`
	Fifteen              float64  `protobuf:"fixed64,3,opt,name=fifteen,proto3" json:"fifteen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformanceMonitor_Load) Reset()         { *m = PerformanceMonitor_Load{} }
func (m *PerformanceMonitor_Load) String() string { return proto.CompactTextString(m) }
func (*PerformanceMonitor_Load) ProtoMessage()    {}
func (*PerformanceMonitor_Load) Descriptor() ([]byte, []int) {
	return fileDescriptor_performance_844bf52ae59b90ea, []int{0, 2}
}
func (m *PerformanceMonitor_Load) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceMonitor_Load.Unmarshal(m, b)
}
func (m *PerformanceMonitor_Load) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceMonitor_Load.Marshal(b, m, deterministic)
}
func (dst *PerformanceMonitor_Load) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceMonitor_Load.Merge(dst, src)
}
func (m *PerformanceMonitor_Load) XXX_Size() int {
	return xxx_messageInfo_PerformanceMonitor_Load.Size(m)
}
func (m *PerformanceMonitor_Load) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceMonitor_Load.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceMonitor_Load proto.InternalMessageInfo

func (m *PerformanceMonitor_Load) GetOne() float64 {
	if m != nil {
		return m.One
	}
	return 0
}

func (m *PerformanceMonitor_Load) GetFive() float64 {
	if m != nil {
		return m.Five
	}
	return 0
}

func (m *PerformanceMonitor_Load) GetFifteen() float64 {
	if m != nil {
		return m.Fifteen
	}
	return 0
}

type PerformanceMonitor_FileSystem struct {
	DirName              string   `protobuf:"bytes,1,opt,name=dir_name,json=dirName,proto3" json:"dir_name,omitempty"`
	DevName              string   `protobuf:"bytes,2,opt,name=dev_name,json=devName,proto3" json:"dev_name,omitempty"`
	TypeName             string   `protobuf:"bytes,3,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	SysTypeName          string   `protobuf:"bytes,4,opt,name=sys_type_name,json=sysTypeName,proto3" json:"sys_type_name,omitempty"`
	Options              string   `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	Flags                uint32   `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	Total                uint64   `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`
	Used                 uint64   `protobuf:"varint,8,opt,name=used,proto3" json:"used,omitempty"`
	Free                 uint64   `protobuf:"varint,9,opt,name=free,proto3" json:"free,omitempty"`
	Avail                uint64   `protobuf:"varint,10,opt,name=avail,proto3" json:"avail,omitempty"`
	Files                uint64   `protobuf:"varint,11,opt,name=files,proto3" json:"files,omitempty"`
	FreeFiles            uint64   `protobuf:"varint,12,opt,name=free_files,json=freeFiles,proto3" json:"free_files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformanceMonitor_FileSystem) Reset()         { *m = PerformanceMonitor_FileSystem{} }
func (m *PerformanceMonitor_FileSystem) String() string { return proto.CompactTextString(m) }
func (*PerformanceMonitor_FileSystem) ProtoMessage()    {}
func (*PerformanceMonitor_FileSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_performance_844bf52ae59b90ea, []int{0, 3}
}
func (m *PerformanceMonitor_FileSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceMonitor_FileSystem.Unmarshal(m, b)
}
func (m *PerformanceMonitor_FileSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceMonitor_FileSystem.Marshal(b, m, deterministic)
}
func (dst *PerformanceMonitor_FileSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceMonitor_FileSystem.Merge(dst, src)
}
func (m *PerformanceMonitor_FileSystem) XXX_Size() int {
	return xxx_messageInfo_PerformanceMonitor_FileSystem.Size(m)
}
func (m *PerformanceMonitor_FileSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceMonitor_FileSystem.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceMonitor_FileSystem proto.InternalMessageInfo

func (m *PerformanceMonitor_FileSystem) GetDirName() string {
	if m != nil {
		return m.DirName
	}
	return ""
}

func (m *PerformanceMonitor_FileSystem) GetDevName() string {
	if m != nil {
		return m.DevName
	}
	return ""
}

func (m *PerformanceMonitor_FileSystem) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *PerformanceMonitor_FileSystem) GetSysTypeName() string {
	if m != nil {
		return m.SysTypeName
	}
	return ""
}

func (m *PerformanceMonitor_FileSystem) GetOptions() string {
	if m != nil {
		return m.Options
	}
	return ""
}

func (m *PerformanceMonitor_FileSystem) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *PerformanceMonitor_FileSystem) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PerformanceMonitor_FileSystem) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *PerformanceMonitor_FileSystem) GetFree() uint64 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *PerformanceMonitor_FileSystem) GetAvail() uint64 {
	if m != nil {
		return m.Avail
	}
	return 0
}

func (m *PerformanceMonitor_FileSystem) GetFiles() uint64 {
	if m != nil {
		return m.Files
	}
	return 0
}

func (m *PerformanceMonitor_FileSystem) GetFreeFiles() uint64 {
	if m != nil {
		return m.FreeFiles
	}
	return 0
}

type PerformanceMonitor_ProcTime struct {
	StartTime            uint64   `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	User                 uint64   `protobuf:"varint,2,opt,name=user,proto3" json:"user,omitempty"`
	Sys                  uint64   `protobuf:"varint,3,opt,name=sys,proto3" json:"sys,omitempty"`
	Total                uint64   `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformanceMonitor_ProcTime) Reset()         { *m = PerformanceMonitor_ProcTime{} }
func (m *PerformanceMonitor_ProcTime) String() string { return proto.CompactTextString(m) }
func (*PerformanceMonitor_ProcTime) ProtoMessage()    {}
func (*PerformanceMonitor_ProcTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_performance_844bf52ae59b90ea, []int{0, 4}
}
func (m *PerformanceMonitor_ProcTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceMonitor_ProcTime.Unmarshal(m, b)
}
func (m *PerformanceMonitor_ProcTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceMonitor_ProcTime.Marshal(b, m, deterministic)
}
func (dst *PerformanceMonitor_ProcTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceMonitor_ProcTime.Merge(dst, src)
}
func (m *PerformanceMonitor_ProcTime) XXX_Size() int {
	return xxx_messageInfo_PerformanceMonitor_ProcTime.Size(m)
}
func (m *PerformanceMonitor_ProcTime) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceMonitor_ProcTime.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceMonitor_ProcTime proto.InternalMessageInfo

func (m *PerformanceMonitor_ProcTime) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PerformanceMonitor_ProcTime) GetUser() uint64 {
	if m != nil {
		return m.User
	}
	return 0
}

func (m *PerformanceMonitor_ProcTime) GetSys() uint64 {
	if m != nil {
		return m.Sys
	}
	return 0
}

func (m *PerformanceMonitor_ProcTime) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type PerformanceMonitor_Process struct {
	Pid                  int32                        `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Args                 []string                     `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	ExeName              string                       `protobuf:"bytes,3,opt,name=exe_name,json=exeName,proto3" json:"exe_name,omitempty"`
	ExeCwd               string                       `protobuf:"bytes,4,opt,name=exe_cwd,json=exeCwd,proto3" json:"exe_cwd,omitempty"`
	ExeRoot              string                       `protobuf:"bytes,5,opt,name=exe_root,json=exeRoot,proto3" json:"exe_root,omitempty"`
	CpuProcTime          *PerformanceMonitor_ProcTime `protobuf:"bytes,6,opt,name=cpu_proc_time,json=cpuProcTime,proto3" json:"cpu_proc_time,omitempty"`
	CpuLastTime          uint64                       `protobuf:"varint,7,opt,name=cpu_last_time,json=cpuLastTime,proto3" json:"cpu_last_time,omitempty"`
	CpuPercent           float64                      `protobuf:"fixed64,8,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemSize              uint64                       `protobuf:"varint,9,opt,name=mem_size,json=memSize,proto3" json:"mem_size,omitempty"`
	MemResident          uint64                       `protobuf:"varint,10,opt,name=mem_resident,json=memResident,proto3" json:"mem_resident,omitempty"`
	MemShare             uint64                       `protobuf:"varint,11,opt,name=mem_share,json=memShare,proto3" json:"mem_share,omitempty"`
	MemMinorFaults       uint64                       `protobuf:"varint,12,opt,name=mem_minor_faults,json=memMinorFaults,proto3" json:"mem_minor_faults,omitempty"`
	MemMajorFaults       uint64                       `protobuf:"varint,13,opt,name=mem_major_faults,json=memMajorFaults,proto3" json:"mem_major_faults,omitempty"`
	MemPageFaults        uint64                       `protobuf:"varint,14,opt,name=mem_page_faults,json=memPageFaults,proto3" json:"mem_page_faults,omitempty"`
	StatName             string                       `protobuf:"bytes,15,opt,name=stat_name,json=statName,proto3" json:"stat_name,omitempty"`
	StatState            int32                        `protobuf:"varint,16,opt,name=stat_state,json=statState,proto3" json:"stat_state,omitempty"`
	StatPpid             int32                        `protobuf:"varint,17,opt,name=stat_ppid,json=statPpid,proto3" json:"stat_ppid,omitempty"`
	StatTty              int32                        `protobuf:"varint,18,opt,name=stat_tty,json=statTty,proto3" json:"stat_tty,omitempty"`
	StatPriority         int32                        `protobuf:"varint,19,opt,name=stat_priority,json=statPriority,proto3" json:"stat_priority,omitempty"`
	StatNice             int32                        `protobuf:"varint,20,opt,name=stat_nice,json=statNice,proto3" json:"stat_nice,omitempty"`
	StatProcessor        int32                        `protobuf:"varint,21,opt,name=stat_processor,json=statProcessor,proto3" json:"stat_processor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *PerformanceMonitor_Process) Reset()         { *m = PerformanceMonitor_Process{} }
func (m *PerformanceMonitor_Process) String() string { return proto.CompactTextString(m) }
func (*PerformanceMonitor_Process) ProtoMessage()    {}
func (*PerformanceMonitor_Process) Descriptor() ([]byte, []int) {
	return fileDescriptor_performance_844bf52ae59b90ea, []int{0, 5}
}
func (m *PerformanceMonitor_Process) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceMonitor_Process.Unmarshal(m, b)
}
func (m *PerformanceMonitor_Process) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceMonitor_Process.Marshal(b, m, deterministic)
}
func (dst *PerformanceMonitor_Process) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceMonitor_Process.Merge(dst, src)
}
func (m *PerformanceMonitor_Process) XXX_Size() int {
	return xxx_messageInfo_PerformanceMonitor_Process.Size(m)
}
func (m *PerformanceMonitor_Process) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceMonitor_Process.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceMonitor_Process proto.InternalMessageInfo

func (m *PerformanceMonitor_Process) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *PerformanceMonitor_Process) GetExeName() string {
	if m != nil {
		return m.ExeName
	}
	return ""
}

func (m *PerformanceMonitor_Process) GetExeCwd() string {
	if m != nil {
		return m.ExeCwd
	}
	return ""
}

func (m *PerformanceMonitor_Process) GetExeRoot() string {
	if m != nil {
		return m.ExeRoot
	}
	return ""
}

func (m *PerformanceMonitor_Process) GetCpuProcTime() *PerformanceMonitor_ProcTime {
	if m != nil {
		return m.CpuProcTime
	}
	return nil
}

func (m *PerformanceMonitor_Process) GetCpuLastTime() uint64 {
	if m != nil {
		return m.CpuLastTime
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetCpuPercent() float64 {
	if m != nil {
		return m.CpuPercent
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetMemSize() uint64 {
	if m != nil {
		return m.MemSize
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetMemResident() uint64 {
	if m != nil {
		return m.MemResident
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetMemShare() uint64 {
	if m != nil {
		return m.MemShare
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetMemMinorFaults() uint64 {
	if m != nil {
		return m.MemMinorFaults
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetMemMajorFaults() uint64 {
	if m != nil {
		return m.MemMajorFaults
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetMemPageFaults() uint64 {
	if m != nil {
		return m.MemPageFaults
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetStatName() string {
	if m != nil {
		return m.StatName
	}
	return ""
}

func (m *PerformanceMonitor_Process) GetStatState() int32 {
	if m != nil {
		return m.StatState
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetStatPpid() int32 {
	if m != nil {
		return m.StatPpid
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetStatTty() int32 {
	if m != nil {
		return m.StatTty
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetStatPriority() int32 {
	if m != nil {
		return m.StatPriority
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetStatNice() int32 {
	if m != nil {
		return m.StatNice
	}
	return 0
}

func (m *PerformanceMonitor_Process) GetStatProcessor() int32 {
	if m != nil {
		return m.StatProcessor
	}
	return 0
}

type PerformanceMonitor_NetWork struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Speed                float64  `protobuf:"fixed64,3,opt,name=speed,proto3" json:"speed,omitempty"`
	OutRecvPkgErrRate    float64  `protobuf:"fixed64,4,opt,name=out_recv_pkg_err_rate,json=outRecvPkgErrRate,proto3" json:"out_recv_pkg_err_rate,omitempty"`
	OutSendPkgErrRate    float64  `protobuf:"fixed64,5,opt,name=out_send_pkg_err_rate,json=outSendPkgErrRate,proto3" json:"out_send_pkg_err_rate,omitempty"`
	RecvByte             uint64   `protobuf:"varint,6,opt,name=recv_byte,json=recvByte,proto3" json:"recv_byte,omitempty"`
	RecvPkg              uint64   `protobuf:"varint,7,opt,name=recv_pkg,json=recvPkg,proto3" json:"recv_pkg,omitempty"`
	RecvErr              uint64   `protobuf:"varint,8,opt,name=recv_err,json=recvErr,proto3" json:"recv_err,omitempty"`
	SendByte             uint64   `protobuf:"varint,9,opt,name=send_byte,json=sendByte,proto3" json:"send_byte,omitempty"`
	SendPkg              uint64   `protobuf:"varint,10,opt,name=send_pkg,json=sendPkg,proto3" json:"send_pkg,omitempty"`
	SendErr              uint64   `protobuf:"varint,11,opt,name=send_err,json=sendErr,proto3" json:"send_err,omitempty"`
	RecvByteAvg          float64  `protobuf:"fixed64,12,opt,name=recv_byte_avg,json=recvByteAvg,proto3" json:"recv_byte_avg,omitempty"`
	SendByteAvg          float64  `protobuf:"fixed64,13,opt,name=send_byte_avg,json=sendByteAvg,proto3" json:"send_byte_avg,omitempty"`
	RecvErrRate          float64  `protobuf:"fixed64,14,opt,name=recv_err_rate,json=recvErrRate,proto3" json:"recv_err_rate,omitempty"`
	SendErrRate          float64  `protobuf:"fixed64,15,opt,name=send_err_rate,json=sendErrRate,proto3" json:"send_err_rate,omitempty"`
	RecvPkgAvg           float64  `protobuf:"fixed64,16,opt,name=recv_pkg_avg,json=recvPkgAvg,proto3" json:"recv_pkg_avg,omitempty"`
	SendPkgAvg           float64  `protobuf:"fixed64,17,opt,name=send_pkg_avg,json=sendPkgAvg,proto3" json:"send_pkg_avg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformanceMonitor_NetWork) Reset()         { *m = PerformanceMonitor_NetWork{} }
func (m *PerformanceMonitor_NetWork) String() string { return proto.CompactTextString(m) }
func (*PerformanceMonitor_NetWork) ProtoMessage()    {}
func (*PerformanceMonitor_NetWork) Descriptor() ([]byte, []int) {
	return fileDescriptor_performance_844bf52ae59b90ea, []int{0, 6}
}
func (m *PerformanceMonitor_NetWork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceMonitor_NetWork.Unmarshal(m, b)
}
func (m *PerformanceMonitor_NetWork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceMonitor_NetWork.Marshal(b, m, deterministic)
}
func (dst *PerformanceMonitor_NetWork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceMonitor_NetWork.Merge(dst, src)
}
func (m *PerformanceMonitor_NetWork) XXX_Size() int {
	return xxx_messageInfo_PerformanceMonitor_NetWork.Size(m)
}
func (m *PerformanceMonitor_NetWork) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceMonitor_NetWork.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceMonitor_NetWork proto.InternalMessageInfo

func (m *PerformanceMonitor_NetWork) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PerformanceMonitor_NetWork) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PerformanceMonitor_NetWork) GetSpeed() float64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetOutRecvPkgErrRate() float64 {
	if m != nil {
		return m.OutRecvPkgErrRate
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetOutSendPkgErrRate() float64 {
	if m != nil {
		return m.OutSendPkgErrRate
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetRecvByte() uint64 {
	if m != nil {
		return m.RecvByte
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetRecvPkg() uint64 {
	if m != nil {
		return m.RecvPkg
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetRecvErr() uint64 {
	if m != nil {
		return m.RecvErr
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetSendByte() uint64 {
	if m != nil {
		return m.SendByte
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetSendPkg() uint64 {
	if m != nil {
		return m.SendPkg
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetSendErr() uint64 {
	if m != nil {
		return m.SendErr
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetRecvByteAvg() float64 {
	if m != nil {
		return m.RecvByteAvg
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetSendByteAvg() float64 {
	if m != nil {
		return m.SendByteAvg
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetRecvErrRate() float64 {
	if m != nil {
		return m.RecvErrRate
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetSendErrRate() float64 {
	if m != nil {
		return m.SendErrRate
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetRecvPkgAvg() float64 {
	if m != nil {
		return m.RecvPkgAvg
	}
	return 0
}

func (m *PerformanceMonitor_NetWork) GetSendPkgAvg() float64 {
	if m != nil {
		return m.SendPkgAvg
	}
	return 0
}

func init() {
	proto.RegisterType((*PerformanceMonitor)(nil), "model.PerformanceMonitor")
	proto.RegisterType((*PerformanceMonitor_Memory)(nil), "model.PerformanceMonitor.Memory")
	proto.RegisterType((*PerformanceMonitor_Cpu)(nil), "model.PerformanceMonitor.Cpu")
	proto.RegisterType((*PerformanceMonitor_Load)(nil), "model.PerformanceMonitor.Load")
	proto.RegisterType((*PerformanceMonitor_FileSystem)(nil), "model.PerformanceMonitor.FileSystem")
	proto.RegisterType((*PerformanceMonitor_ProcTime)(nil), "model.PerformanceMonitor.ProcTime")
	proto.RegisterType((*PerformanceMonitor_Process)(nil), "model.PerformanceMonitor.Process")
	proto.RegisterType((*PerformanceMonitor_NetWork)(nil), "model.PerformanceMonitor.NetWork")
}

func init() { proto.RegisterFile("performance.proto", fileDescriptor_performance_844bf52ae59b90ea) }

var fileDescriptor_performance_844bf52ae59b90ea = []byte{
	// 1208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x86, 0x7e, 0x2c, 0x4a, 0x23, 0xcb, 0xb1, 0xd9, 0xa4, 0x65, 0x95, 0xa6, 0x51, 0xdc, 0x1f,
	0xf8, 0xe4, 0x16, 0x29, 0x8a, 0x9e, 0xd3, 0x34, 0x06, 0x0a, 0xc4, 0x86, 0xb1, 0x4a, 0xd1, 0x23,
	0xb1, 0x11, 0x47, 0xea, 0xd6, 0x24, 0x97, 0xd9, 0x5d, 0xca, 0x56, 0xde, 0xa6, 0xf7, 0x3e, 0x42,
	0x81, 0x3e, 0x4d, 0x5f, 0xa1, 0xe7, 0x62, 0x66, 0x97, 0xa4, 0x83, 0xc0, 0xcd, 0xc5, 0x98, 0x9d,
	0xef, 0x9b, 0x6f, 0x67, 0x67, 0x86, 0x23, 0xc3, 0x51, 0x85, 0x66, 0xad, 0x4d, 0x21, 0xcb, 0x15,
	0x9e, 0x56, 0x46, 0x3b, 0x1d, 0xef, 0x15, 0x3a, 0xc3, 0xfc, 0xf8, 0x9f, 0xfb, 0x10, 0x5f, 0x76,
	0xe0, 0xb9, 0x2e, 0x95, 0xd3, 0x26, 0xfe, 0x0c, 0x26, 0x4e, 0x15, 0x68, 0x9d, 0x2c, 0xaa, 0x64,
	0xb0, 0xe8, 0x9d, 0x0c, 0x45, 0xe7, 0x88, 0x9f, 0xc2, 0xa0, 0xc0, 0x22, 0xe9, 0x2d, 0x7a, 0x27,
	0xd3, 0xa7, 0x8b, 0x53, 0x56, 0x3a, 0x7d, 0x5f, 0xe5, 0xf4, 0x1c, 0x0b, 0x6d, 0x76, 0x82, 0xc8,
	0xf1, 0x37, 0x30, 0x58, 0x55, 0x75, 0xd2, 0xe7, 0x98, 0x47, 0x77, 0xc7, 0x3c, 0xaf, 0x6a, 0x41,
	0xcc, 0xf8, 0x29, 0x0c, 0x73, 0x2d, 0xb3, 0x64, 0xc8, 0x11, 0x9f, 0xdf, 0x1d, 0xf1, 0x52, 0xcb,
	0x4c, 0x30, 0x37, 0xfe, 0x18, 0x46, 0x75, 0x45, 0x79, 0x26, 0x7b, 0x8b, 0xde, 0x49, 0x4f, 0x84,
	0x53, 0xfc, 0x03, 0x44, 0xab, 0xaa, 0xce, 0x95, 0x75, 0xc9, 0x68, 0x31, 0xf8, 0x70, 0x02, 0x0d,
	0x3b, 0xbe, 0x80, 0xc3, 0xb5, 0xca, 0x31, 0xb5, 0x3b, 0xeb, 0xb0, 0x48, 0x59, 0x21, 0x62, 0x85,
	0x2f, 0xef, 0x56, 0x38, 0x53, 0x39, 0x2e, 0x39, 0x40, 0x1c, 0xac, 0x5b, 0xfb, 0x25, 0xe9, 0xfd,
	0x04, 0xfb, 0x95, 0xd1, 0x2b, 0xb4, 0xd6, 0x6b, 0x8d, 0x59, 0xeb, 0xc9, 0xdd, 0x5a, 0x97, 0x9e,
	0x2d, 0xa6, 0x21, 0x8c, 0x55, 0xbe, 0x87, 0x61, 0x89, 0xce, 0x26, 0x93, 0x0f, 0x45, 0x5f, 0xa0,
	0xfb, 0x55, 0x9b, 0x2b, 0xc1, 0xf4, 0xf9, 0xbf, 0x3d, 0x18, 0xf9, 0x96, 0xc4, 0x0f, 0x61, 0xe2,
	0xb4, 0x93, 0x79, 0xda, 0xf4, 0x71, 0x28, 0xc6, 0xec, 0x38, 0xc7, 0x22, 0xfe, 0x14, 0xc6, 0xb5,
	0xc5, 0x8c, 0xb1, 0x3e, 0x63, 0x11, 0x9d, 0x03, 0xb4, 0x36, 0x88, 0x0c, 0xf9, 0xb1, 0x88, 0xe8,
	0x4c, 0xd0, 0x63, 0x98, 0xca, 0x95, 0xab, 0x65, 0x9e, 0x12, 0x99, 0xdb, 0x36, 0x14, 0xe0, 0x5d,
	0xbf, 0x58, 0xcc, 0x6e, 0x11, 0x28, 0x84, 0x3b, 0xd4, 0x12, 0xce, 0x0c, 0x22, 0x25, 0xc5, 0xf7,
	0xda, 0x6b, 0x59, 0x25, 0x23, 0x9f, 0x14, 0x39, 0x96, 0xd7, 0xb2, 0x22, 0x90, 0x6f, 0x66, 0x30,
	0xf2, 0x20, 0x39, 0x18, 0x7c, 0x04, 0xe0, 0x9f, 0xc3, 0xe8, 0x38, 0xcc, 0x2b, 0x79, 0x08, 0x9e,
	0xff, 0xd9, 0x83, 0xc1, 0xf3, 0xaa, 0x8e, 0x63, 0x18, 0xd6, 0x16, 0x4d, 0x78, 0x30, 0xdb, 0xe4,
	0x2b, 0xd5, 0x0a, 0xc3, 0x43, 0xd9, 0x8e, 0x0f, 0x61, 0x60, 0x77, 0x36, 0x3c, 0x90, 0x4c, 0x62,
	0xa9, 0x2c, 0xc7, 0xf0, 0x2a, 0xb6, 0xc9, 0x77, 0x2d, 0x95, 0x0b, 0x0f, 0x61, 0x9b, 0x22, 0x95,
	0x79, 0x13, 0x92, 0x27, 0x93, 0x2a, 0x66, 0xf5, 0xda, 0xa5, 0xe4, 0xf6, 0x69, 0x47, 0x74, 0xfe,
	0xd9, 0xbc, 0xa1, 0x69, 0xb5, 0x4e, 0xe7, 0x58, 0x86, 0x8c, 0xc3, 0x69, 0x7e, 0x06, 0x43, 0x9a,
	0x69, 0x12, 0xd3, 0x25, 0x72, 0xb6, 0x3d, 0x41, 0x26, 0x5d, 0xb9, 0x56, 0x5b, 0x9f, 0x6c, 0x4f,
	0xb0, 0x1d, 0x27, 0x10, 0xad, 0xd5, 0xda, 0x21, 0x96, 0x9c, 0x70, 0x4f, 0x34, 0xc7, 0xf9, 0x5f,
	0x7d, 0x80, 0x6e, 0x16, 0x29, 0x93, 0x4c, 0x99, 0xb4, 0x94, 0x85, 0xd7, 0x9c, 0x88, 0x28, 0x53,
	0xe6, 0x42, 0x16, 0xc8, 0x10, 0x6e, 0x3d, 0xd4, 0x0f, 0x10, 0x6e, 0x19, 0xa2, 0x49, 0xd9, 0x55,
	0xe8, 0xb1, 0x01, 0x63, 0x63, 0x72, 0x30, 0x78, 0x0c, 0x33, 0xbb, 0xb3, 0x69, 0x47, 0x18, 0x32,
	0x61, 0x6a, 0x77, 0xf6, 0x55, 0xc3, 0x49, 0x20, 0xd2, 0x95, 0x53, 0xba, 0xb4, 0x5c, 0xa9, 0x89,
	0x68, 0x8e, 0xf1, 0x7d, 0xd8, 0x5b, 0xe7, 0x72, 0x63, 0xb9, 0x5c, 0x33, 0xe1, 0x0f, 0xe4, 0xe5,
	0xce, 0x85, 0x6a, 0xf9, 0x43, 0x68, 0x5d, 0x16, 0x2a, 0xc5, 0x36, 0x57, 0x83, 0x26, 0x69, 0xe2,
	0x7d, 0x64, 0x53, 0xb4, 0xdc, 0x4a, 0x95, 0x27, 0xe0, 0xa3, 0xf9, 0xc0, 0x37, 0xa9, 0x1c, 0x6d,
	0x32, 0xf5, 0x5e, 0x3e, 0xd0, 0xd4, 0xf0, 0x48, 0x79, 0x68, 0xdf, 0x4f, 0x0d, 0x79, 0xa8, 0x68,
	0x76, 0x8e, 0x30, 0xa6, 0xaf, 0xef, 0x15, 0x2d, 0x90, 0x47, 0x00, 0xd6, 0x49, 0xe3, 0x52, 0x5e,
	0x2e, 0x7e, 0x7e, 0x26, 0xec, 0x61, 0xb8, 0x19, 0xac, 0xfe, 0xad, 0xc1, 0x7a, 0x7f, 0x88, 0xda,
	0x97, 0x0d, 0x6f, 0xbd, 0x6c, 0xfe, 0xf7, 0x1e, 0x44, 0xe1, 0x2b, 0xa7, 0x98, 0x4a, 0x65, 0xac,
	0xbf, 0x27, 0xc8, 0x24, 0x65, 0x69, 0x36, 0x36, 0xe9, 0x2f, 0x06, 0x27, 0x13, 0xc1, 0x36, 0x75,
	0x0b, 0x6f, 0xde, 0xe9, 0x48, 0x84, 0x37, 0xbe, 0xd8, 0x9f, 0x00, 0x99, 0xe9, 0xea, 0x3a, 0x0b,
	0xad, 0x18, 0xe1, 0x0d, 0x3e, 0xbf, 0xce, 0x9a, 0x18, 0xa3, 0xb5, 0x6b, 0xda, 0x80, 0x37, 0x28,
	0xb4, 0x76, 0xf1, 0x19, 0xcc, 0x56, 0x55, 0x9d, 0xd2, 0x82, 0xf1, 0xcf, 0x1b, 0xf1, 0xc6, 0x3d,
	0xfe, 0xff, 0xa5, 0x44, 0xef, 0x16, 0xd3, 0x55, 0x55, 0xb7, 0x35, 0x3a, 0xf6, 0x3a, 0xb9, 0xb4,
	0xa1, 0x4c, 0xbe, 0x81, 0xc4, 0x79, 0x29, 0xad, 0x2f, 0xd4, 0x63, 0x98, 0xf2, 0x5d, 0x68, 0x56,
	0x58, 0x3a, 0xee, 0x66, 0x4f, 0x00, 0xa9, 0x78, 0x0f, 0xe5, 0x59, 0x60, 0x91, 0x5a, 0xf5, 0xb6,
	0xe9, 0x6b, 0x54, 0x60, 0xb1, 0x54, 0x6f, 0x31, 0x7e, 0x02, 0xfb, 0x04, 0x19, 0xb4, 0x2a, 0xa3,
	0x60, 0xdf, 0xe1, 0x69, 0x81, 0x85, 0x08, 0x2e, 0x1a, 0x56, 0x8e, 0xfe, 0x4d, 0x1a, 0x0c, 0xbd,
	0x26, 0xb9, 0x25, 0x9d, 0xe3, 0x13, 0x38, 0x24, 0xb0, 0x50, 0xa5, 0x36, 0xe9, 0x5a, 0xd6, 0xb9,
	0x6b, 0x9a, 0x7e, 0x50, 0x60, 0x71, 0x4e, 0xee, 0x33, 0xf6, 0xb6, 0x4c, 0xf9, 0x7b, 0xc7, 0x9c,
	0x75, 0x4c, 0x72, 0x07, 0xe6, 0xd7, 0x70, 0x8f, 0x98, 0x95, 0xdc, 0x60, 0x43, 0x3c, 0x60, 0xe2,
	0xac, 0xc0, 0xe2, 0x52, 0x6e, 0x30, 0xf0, 0x1e, 0x02, 0x4d, 0x8b, 0xf3, 0x3d, 0xbb, 0xe7, 0xbf,
	0x22, 0x72, 0x70, 0xd3, 0xfc, 0x70, 0xb9, 0x94, 0xfe, 0x60, 0x72, 0xc8, 0xcd, 0x67, 0xfa, 0x92,
	0x1c, 0x6d, 0x6c, 0x45, 0xa3, 0x71, 0xc4, 0x28, 0xc7, 0x5e, 0xd2, 0x7c, 0xd0, 0x7a, 0x21, 0xd0,
	0xb9, 0x5d, 0x12, 0x33, 0x16, 0xd1, 0xf9, 0x95, 0xdb, 0xc5, 0x5f, 0xc0, 0xcc, 0xc7, 0x19, 0xa5,
	0x8d, 0x72, 0xbb, 0xe4, 0x23, 0xc6, 0xf7, 0x39, 0x36, 0xf8, 0xba, 0xc4, 0x68, 0x07, 0xde, 0xef,
	0xc4, 0x2f, 0x68, 0x0f, 0x7e, 0x05, 0x07, 0x41, 0x81, 0xc7, 0x53, 0x9b, 0xe4, 0x01, 0x33, 0x66,
	0x5e, 0x22, 0x38, 0xe7, 0x7f, 0x0c, 0x21, 0x0a, 0xbf, 0x34, 0xbc, 0x4e, 0xbb, 0x05, 0xc3, 0x76,
	0x7c, 0x00, 0x7d, 0x55, 0x85, 0xbd, 0xd2, 0x57, 0x15, 0x7d, 0x07, 0xb6, 0x42, 0xcc, 0xc2, 0xbe,
	0xf2, 0x87, 0xf8, 0x5b, 0x78, 0xa0, 0x6b, 0x97, 0x1a, 0x5c, 0x6d, 0xd3, 0xea, 0x6a, 0x93, 0xa2,
	0x31, 0xa9, 0xa1, 0x82, 0x0c, 0x99, 0x75, 0xa4, 0x6b, 0x27, 0x70, 0xb5, 0xbd, 0xbc, 0xda, 0xbc,
	0x30, 0x46, 0x50, 0x61, 0x42, 0x84, 0xc5, 0x32, 0x7b, 0x37, 0x62, 0xaf, 0x8d, 0x58, 0x62, 0x99,
	0xdd, 0x8a, 0x78, 0x08, 0x13, 0xd6, 0x7f, 0xbd, 0x73, 0xd8, 0xfc, 0xc2, 0x90, 0xe3, 0xc7, 0x9d,
	0xe3, 0x25, 0xd8, 0x5c, 0xde, 0x6c, 0x6a, 0xe3, 0x2f, 0x6c, 0x21, 0x34, 0x26, 0x6c, 0x20, 0x86,
	0x5e, 0x18, 0xc3, 0x05, 0xa4, 0x04, 0x58, 0xd2, 0x4f, 0xec, 0x98, 0x1c, 0x8d, 0x64, 0x93, 0x5d,
	0x18, 0xd7, 0xc8, 0xfa, 0x8c, 0x5a, 0x88, 0x24, 0xa7, 0x1d, 0x44, 0x92, 0xc7, 0x30, 0x6b, 0xb3,
	0x4c, 0xe5, 0x76, 0xc3, 0x53, 0xda, 0x13, 0xd3, 0x26, 0xd3, 0x67, 0xdb, 0x0d, 0x6f, 0xde, 0xe6,
	0x5a, 0xe6, 0xcc, 0x3c, 0xa7, 0xb9, 0x3a, 0x70, 0x9a, 0xac, 0x7d, 0x5d, 0x0e, 0x3a, 0x9d, 0xa6,
	0x22, 0x8d, 0x4e, 0xcb, 0xb9, 0xd7, 0xe9, 0x34, 0x9c, 0x05, 0xec, 0xb7, 0x5d, 0xa1, 0xab, 0x0e,
	0xfd, 0x57, 0x1b, 0x8a, 0x43, 0x37, 0x2d, 0x60, 0xbf, 0xed, 0x02, 0x31, 0x8e, 0x3c, 0x23, 0xbc,
	0xf5, 0xd9, 0x76, 0xf3, 0x7a, 0xc4, 0xff, 0x75, 0x7e, 0xf7, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xec, 0xcb, 0xc3, 0x83, 0x8a, 0x0a, 0x00, 0x00,
}
